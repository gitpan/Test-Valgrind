NAME
    Test::Valgrind - Test Perl code through valgrind.

VERSION
    Version 1.00

SYNOPSIS
        # From the command-line
        perl -MTest::Valgrind leaky.pl

        # In a test file
        use Test::More;
        eval 'use Test::Valgrind';
        plan skip_all => 'Test::Valgrind is required to test your distribution with valgrind' if $@;
        ...

        # In all the test files of a directory
        prove --exec 'perl -Iblib/lib -Iblib/arch -MTest::Valgrind' t/*.t

DESCRIPTION
    This module is a front-end to the "Test::Valgrind::*" API that lets you
    run Perl code through the "memcheck" tool of the "valgrind" memory
    debugger, to test it for memory errors and leaks. If they aren't
    available yet, it will first generate suppressions for the current
    "perl" interpreter and store them in the portable flavour of
    ~/.perl/Test-Valgrind/suppressions/$VERSION. The actual run will then
    take place, and tests will be passed or failed according to the result
    of the analysis.

    Due to the nature of perl's memory allocator, this module can't track
    leaks of Perl objects. This includes non-mortalized scalars and memory
    cycles. However, it can track leaks of chunks of memory allocated in XS
    extensions with "Newx" and friends or "malloc". As such, it's
    complementary to the other very good leak detectors listed in the "SEE
    ALSO" section.

CONFIGURATION
    You can pass parameters to "import" as a list of key / value pairs,
    where valid keys are :

    *   "tool => $tool"

        The Test::Valgrind::Tool object (or class name) to use.

        Defaults to Test::Valgrind::Tool::memcheck.

    *   "action => $action"

        The Test::Valgrind::Action object (or class name) to use.

        Defaults to Test::Valgrind::Action::Test.

    *   "diag => $bool"

        If true, print the output of the test script as diagnostics.

    *   "callers => $number"

        Specify the maximum stack depth studied when valgrind encounters an
        error. Raising this number improves granularity.

        Default is 12.

    *   "extra_supps => \@files"

        Also use suppressions from @files besides "perl"'s.

    *   "no_def_supp => $bool"

        If true, do not use the default suppression file.

CAVEATS
    You can't use this module to test code given by the "-e" command-line
    switch.

    Perl 5.8 is notorious for leaking like there's no tomorrow, so the
    suppressions are very likely not to be very accurate on it. Anyhow,
    results will most likely be better if your perl is built with debugging
    enabled. Using the latest "valgrind" available will also help.

    This module is not really secure. It's definitely not taint safe. That
    shouldn't be a problem for test files.

    What your tests output to "STDOUT" and "STDERR" is eaten unless you pass
    the "diag" option, in which case it will be reprinted as diagnostics.

DEPENDENCIES
    Valgrind 3.1.0 (<http://valgrind.org>).

    XML::Twig, version, File::HomeDir, Env::Sanctify, Perl::Destruct::Level.

SEE ALSO
    All the "Test::Valgrind::*" API, including Test::Valgrind::Command,
    Test::Valgrind::Tool, Test::Valgrind::Action and
    Test::Valgrind::Session.

    Test::LeakTrace.

    Devel::Leak, Devel::LeakTrace, Devel::LeakTrace::Fast.

AUTHOR
    Vincent Pit, "<perl at profvince.com>", <http://www.profvince.com>.

    You can contact me by mail or on "irc.perl.org" (vincent).

BUGS
    Please report any bugs or feature requests to "bug-test-valgrind at
    rt.cpan.org", or through the web interface at
    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Test-Valgrind>. I will
    be notified, and then you'll automatically be notified of progress on
    your bug as I make changes.

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc Test::Valgrind

ACKNOWLEDGEMENTS
    RafaÃ«l Garcia-Suarez, for writing and instructing me about the
    existence of Perl::Destruct::Level (Elizabeth Mattijsen is a close
    second).

    H.Merijn Brand, for daring to test this thing.

    All you people that showed interest in this module, which motivated me
    into completely rewriting it.

COPYRIGHT & LICENSE
    Copyright 2008-2009 Vincent Pit, all rights reserved.

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

